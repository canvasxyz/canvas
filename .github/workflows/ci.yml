name: CI
on: [push, workflow_dispatch]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm ci

      - name: Run eslint
        run: npm run lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Set up Postgres
        run: node client.js
          env:
            POSTGRES_HOST: localhost
            POSTGRES_PORT: 5432

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run @canvas-js/gossiplog tests
        run: npm run test --workspace=@canvas-js/gossiplog --match="\!simulate a randomly partitioned network"

      - name: Run @canvas-js/modeldb tests
        run: npm run test --workspace=@canvas-js/modeldb

      - name: Run @canvas-js/chain-atp tests
        run: npm run test --workspace=@canvas-js/chain-atp

      - name: Run @canvas-js/core tests
        run: npm run test --workspace=@canvas-js/core

      - name: Run @canvas-js/vm tests
        run: npm run test --workspace=@canvas-js/vm

      - name: Run @canvas-js/interfaces interface tests
        run: npm run test --workspace=@canvas-js/interfaces

      # - name: Run @canvas-js/ethereum-contracts tests
      #   run: npm run test --workspace=@canvas-js/ethereum-contracts

  test-build:
    name: Build test (pnpm)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Install modules
        run: pnpm i

      - name: Fix utf8 file
        run: iconv -c -f utf-8 -t ascii node_modules/.pnpm/@cosmjs+encoding@0.30.1/node_modules/@cosmjs/encoding/build/utf8.d.ts > node_modules/.pnpm/@cosmjs+encoding@0.30.1/node_modules/@cosmjs/encoding/build/utf8.d.ts

      - name: Build
        run: pnpm run build
